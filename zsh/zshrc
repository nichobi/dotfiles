fpath=($ZDOTDIR/completion $fpath)

plugins=(
  ohmyzsh/shrink-path
  jeffreytse/zsh-vi-mode
  ohmyzsh/fzf
  Aloxaf/fzf-tab
  zsh-users/zsh-autosuggestions
  zsh-users/zsh-syntax-highlighting # Must be last!
)
plugin-install() {
  [[ ! -d $ZCACHEDIR/plugins ]] && mkdir $ZCACHEDIR/plugins
  for plugin in $plugins; do
    if [[ ! -d $ZCACHEDIR/plugins/${plugin:t} ]]; then
      if [[ ${plugin:h} == 'ohmyzsh' ]]; then
        [[ ! -d $ZCACHEDIR/plugins/ohmyzsh ]] && git clone https://github.com/ohmyzsh/ohmyzsh.git $ZCACHEDIR/plugins/ohmyzsh
        ln -s ohmyzsh/plugins/${plugin:t} $ZCACHEDIR/plugins/
      else
        git clone https://github.com/${plugin} $ZCACHEDIR/plugins/${plugin:t}
      fi
      local new_installed=1
    fi
  done
  [[ -n "$new_installed" ]] && plugin-compile
}
plugin-source() {
  for plugin in $plugins; do
    if [[ -f $ZCACHEDIR/plugins/${plugin:t}/${plugin:t}.plugin.zsh ]]; then
      source $ZCACHEDIR/plugins/${plugin:t}/${plugin:t}.plugin.zsh
    else
      echo "Unable to source $plugin" >&2
    fi
  done
}
plugin-update() {
  for d in $ZCACHEDIR/plugins/*/.git(/); do
    echo "Updating ${d:h:t}..."
    command git -C "${d:h}" pull --ff --recurse-submodules --depth 1 --rebase --autostash
  done
  plugin-compile
}
plugin-compile() {
  local f
  autoload -Uz zrecompile
  for f in $ZCACHEDIR/plugins/**/*.zsh; do
    [[ $f != */test-data/* ]] || continue  # fix for zsh-syntax-highlighting
    zrecompile -pq "$f"
  done
}
plugin-install
plugin-source

# Rebind history search, fix for:
# https://github.com/jeffreytse/zsh-vi-mode/issues/127
function zvm_after_init() {
  zvm_bindkey viins '^R' fzf-history-widget
}

setopt interactive_comments # Comments in interactive shell
setopt auto_cd              # cd by typing directory name if it's not a command
setopt auto_pushd           # Automatically pushd when changing directory
setopt pushd_ignore_dups    # Ignore duplicate directories in pushd
#setopt pushdminus           # 

for f in $ZDOTDIR/zshrc.d/*.zsh; do
  source $f
done
